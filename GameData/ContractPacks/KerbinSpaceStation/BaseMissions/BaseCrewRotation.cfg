CONTRACT_TYPE
{
    name = BaseCrewRotation
    title = Do a crew rotation to @/targetVessel1
	genericTitle = Base Crew Rotation
    group = BasesandStations
	description = Oh no, @/targetKerbal1 forgot their marriage anniversary so bring them back to @/targetBody2 right now! @/targetKerbal2 is feeling a little homesick too, so bring them back too while you're at it.
	genericDescription = Bring a couple of Kerbals home from a base.
    synopsis = Bring @/targetKerbal1 and @/targetKerbal2 back to @/targetBody2.
    completedMessage = Kerbonaut @/targetKerbal1 would like to thank you. They got back just in time.
    minExpiry = 1
    maxExpiry = 7
    cancellable = true
    declinable = true
	maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = Random(10.0, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1,2)
    failureFunds = Random(1000, 10000.0)
    advanceFunds = Random(1000, 10000.0)
	targetBody = @/targetBody1
	DATA
    {
        type = Vessel
		requiredValue = true
		uniquenessCheck = GROUP_ACTIVE
		targetVessel1 = AllVessels().Where(v => v.IsLanded() && v.VesselType() == Base && v.CrewCount()>=2).Random()
		title = Must have a base with at least two crew members
    }	
	
	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/targetVessel1.CelestialBody()
		hidden = true
    }
	
	DATA
    {
        type = CelestialBody
        requiredValue = false
        targetBody2 = HomeWorld()
		hidden = true
    }
	
	DATA
	{
		type = Kerbal
		uniquenessCheck = GROUP_ACTIVE
		targetKerbal1 = @/targetVessel1.Crew().Random()
		targetKerbal2 = @/targetVessel1.Crew().Exclude(@targetKerbal1).Random()
		hidden = true
		//title = Selecting Crew members to be returned home
	}
    
	DATA
	{
        type = Location
		vesselLocation = @/targetVessel1.Location()	
		hidden = true
    }

	PARAMETER
	{
		name = All
		type = All
		title = Land on @/targetBody1 near @/targetVessel1	
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			targetBody = @/targetBody1
			title = Land on @/targetBody1
			hideChildren = true	
		}
		PARAMETER
		{
			name = VisitWaypoint
			type = VisitWaypoint
			index = 0
			distance = 100.0
			title = Near @/targetVessel1
		}
	}
		
	PARAMETER
	{
		name = BoardBase
		type = VesselParameterGroup
		title = Board 2 Kerbals on @/targetVessel1
		vessel = @/targetVessel1
		PARAMETER
		{
			name = BoardBase1
			type = HasCrew
			minCrew = 2
			title = Leave at least 2 kerbals on @/targetVessel1 .
		}
	}
	
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		kerbal = @/targetKerbal1
		title = Bring back @/targetKerbal1
	}	
	    
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		kerbal = @/targetKerbal2
		title = Bring back @/targetKerbal2
	}
	
	BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		
		WAYPOINT
        {    name = Base
		     targetBody = @/targetVessel1.CelestialBody()
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		checkOnActiveContract = false
		contractType = BaseCrewRotation
		minCount = 0
		cooldownDuration = 10d
	}

	REQUIREMENT
	{
		name = CompleteContract
		type = Expression
		checkOnActiveContract = false
		expression = (!@/targetBody1.IsHomeWorld())
		title = Base must not be on the homeworld
	}

REQUIREMENT
	{
		name = RandomRoll
		type = Expression
		checkOnActiveContract = false
		expression = @BasesandStations:randomRoll >5
		title = The RNG must like you
	}
}