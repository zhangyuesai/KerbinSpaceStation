CONTRACT_TYPE
{
    name = BaseScience
    title = Science Expansion for @/ScienceTarget
	genericTitle = Add a Science Lab to a Base
    group = BasesandStations
	description = Our scientists think that maybe @/targetBody1 have some scientific value so this is where you come in.
	genericDescription = Our scientists think that maybe our base can provide some scientific value so this is where you come in.
    synopsis = Add a new Science Lab to @/ScienceTarget.
    completedMessage = Finally our scientist are investigating something.
    minExpiry = 1
    maxExpiry = 7
    cancellable = true
    declinable = true
	maxSimultaneous = 1
    rewardScience = 30.0
    rewardReputation = Random(1.0, 2.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(1, 10000.0)
	targetBody = @/targetBody1
	DATA
    {
        type = Vessel
        requiredValue = true
		uniquenessCheck = CONTRACT_ALL
        ScienceTarget = AllVessels().Where(v => v.VesselType() == Base && v.IsLanded() && v.CrewCount() > 0).SelectUnique()
		title = Must have a base with no science lab
    }
	DATA
	{
        type = CelestialBody
		requiredValue = true
		targetBody1 = @/ScienceTarget.CelestialBody()
		hidden = true
    }

    DATA
	{
        type = Location
		vesselLocation = @ScienceTarget.Location()	
		hidden = true
    }

	PARAMETER
	{
	    name = ScienceLab
		type = PartValidation
		title = Have a Science Lab
	    partModule = ModuleScienceLab
		minCount = 1		
	}
	PARAMETER
	{
	name = All
	type = All
	hideChildren = true
	title = Land within 500m of @/ScienceTarget
	PARAMETER
    {
        name = VisitWaypoint
		type = VisitWaypoint
		index = 0
		distance = 2000.0
	}
	PARAMETER
	{
	name = ReachState
	type = ReachState
	targetBody = @/targetBody1
	situation = LANDED
	situation = SPLASHED
	}
	}
	 BEHAVIOUR
    {
        name = WaypointGenerator
		type = WaypointGenerator
		WAYPOINT
        {    name = Base
		     targetBody = @/targetBody1
			 icon = balloon
			 altitude = 0.0
			 latitude = @/vesselLocation.Latitude()
			 longitude = @/vesselLocation.Longitude()
        }
    }
    REQUIREMENT
    {
        name = PartModuleUnlocked
        type = PartModuleUnlocked
        partModule = ModuleScienceLab
    }
	
	PARAMETER
{
    name = NewVessel
    type = NewVessel
	title = This requires a new vessel
}

		REQUIREMENT
	{
	name = Scanner
	checkOnActiveContract = false
	type = Expression
	expression = (!@/targetBody1.IsHomeWorld())
	title = Base must not be on the homeworld
	}
}